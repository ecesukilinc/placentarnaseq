#BSUB -J espresso_c[1-72]
#BSUB -W 96:00
#BSUB -o /rsrch5/scratch/neuro_rsrch/ekilinc/lnrnatrial/placenta_trial/Espresso/outC/Output_%J_%I.out
#BSUB -e /rsrch5/scratch/neuro_rsrch/ekilinc/lnrnatrial/placenta_trial/Espresso/outC/Output_%J_%I.err 
#BSUB -q long 
#BSUB -n 5 			# Request all procs
#BSUB -M 100			# Maximum!
#BSUB -R rusage[mem=100]
#BSUB -u EKilinc@mdanderson.org	# This is useful for error reporting
## explanation of arguments above:
## -J arbitrary job name
## -W wallclock in hour:min
## -o use this or output (stdout) will be sent via email!
## -e use this or errors (stderr) will be sent via email!
## -q queue name (short is the default)
## -n min_proc[,max_proc]  number of processors required (28=entire node)
## -M memory in GB 
## -R memory in GB 
## -u EmailAddress


module add R/4.3.1
module add samtools/1.16
eval "$(/risapps/rhel8/miniconda3/py39_4.12.0/bin/conda shell.bash hook)"
module add perl/5.36.1
module add blast/2.14.0
eval "$(/risapps/rhel8/miniconda3/py39_4.12.0/bin/conda shell.bash hook)"


module add hmmer/3.3.2
eval "$(/risapps/rhel8/miniconda3/py39_4.12.0/bin/conda shell.bash hook)"
conda activate blast-2.14.0 
conda activate --stack samtools-1.16.1 
conda activate --stack hmmer-3.3.2

offset=1
base_espresso=/rsrch5/scratch/neuro_rsrch/ekilinc/lnrnatrial/software/espresso/src
espresso_script=/rsrch5/scratch/neuro_rsrch/ekilinc/lnrnatrial/placenta_trial/Espresso
base_ref=/rsrch5/scratch/neuro_rsrch/ekilinc/lnrnatrial/ref

index="$(($LSB_JOBINDEX-$offset))"

perl $base_espresso/ESPRESSO_C.pl \
-I /rsrch5/scratch/neuro_rsrch/ekilinc/lnrnatrial/placenta_trial/Espresso/Espresso_outS \
-F $base_ref/GCA_000001405.15_GRCh38_no_alt_analysis_set.fna \
-X $index \
-T 5

conda deactivate
conda deactivate
conda deactivate
conda deactivate
